---
# Source: grafana-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-grafana-operator
  namespace: default
  labels:
    helm.sh/chart: grafana-operator-v5.16.0
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v5.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: grafana-operator
    app.kubernetes.io/component: operator
automountServiceAccountToken: true
---
# Source: grafana-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-grafana-operator
  labels:
    helm.sh/chart: grafana-operator-v5.16.0
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v5.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: grafana-operator
    app.kubernetes.io/component: operator
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - persistentvolumeclaims
    - secrets
    - serviceaccounts
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - get
    - list
    - patch
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanaalertrulegroups
    - grafanacontactpoints
    - grafanadashboards
    - grafanadatasources
    - grafanafolders
    - grafananotificationpolicies
    - grafananotificationtemplates
    - grafanas
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanaalertrulegroups/finalizers
    - grafanacontactpoints/finalizers
    - grafanadashboards/finalizers
    - grafanadatasources/finalizers
    - grafanafolders/finalizers
    - grafananotificationpolicies/finalizers
    - grafananotificationtemplates/finalizers
    - grafanas/finalizers
    verbs:
    - update
  - apiGroups:
    - grafana.integreatly.org
    resources:
    - grafanaalertrulegroups/status
    - grafanacontactpoints/status
    - grafanadashboards/status
    - grafanadatasources/status
    - grafanafolders/status
    - grafananotificationpolicies/status
    - grafananotificationtemplates/status
    - grafanas/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
---
# Source: grafana-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-grafana-operator
  labels:
    helm.sh/chart: grafana-operator-v5.16.0
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v5.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: grafana-operator
    app.kubernetes.io/component: operator
subjects:
  - kind: ServiceAccount
    name: test-grafana-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: test-grafana-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: grafana-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-grafana-operator-metrics-service
  namespace: default
  labels:
    helm.sh/chart: grafana-operator-v5.16.0
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v5.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: grafana-operator
    app.kubernetes.io/component: operator
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: 8888
      targetPort: pprof
      protocol: TCP
      name: pprof
  selector:
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: test
---
# Source: grafana-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-grafana-operator
  namespace: default
  labels:
    helm.sh/chart: grafana-operator-v5.16.0
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v5.16.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: grafana-operator
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana-operator
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        helm.sh/chart: grafana-operator-v5.16.0
        app.kubernetes.io/name: grafana-operator
        app.kubernetes.io/instance: test
        app.kubernetes.io/version: "v5.16.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: grafana-operator
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: test-grafana-operator
      containers:
        - name: grafana-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "ghcr.io/grafana/grafana-operator:v5.16.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: WATCH_NAMESPACE
              value: 
            - name: WATCH_NAMESPACE_SELECTOR
              value: ""
          args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=0.0.0.0:9090
            - --pprof-addr=0.0.0.0:8888
            - --zap-encoder=console
            - --zap-log-level=info
            - --zap-time-encoding=rfc3339
          volumeMounts:
            - name: dashboards-dir
              mountPath: /tmp/dashboards
          ports:
            - containerPort: 9090
              name: metrics
              protocol: TCP
            - containerPort: 8888
              name: pprof
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
      volumes:
        - name: dashboards-dir
          emptyDir: {}
